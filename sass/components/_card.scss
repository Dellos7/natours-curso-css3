.card {
    //Le damos perspectiva al elemento padre, después se define un elemento hijo
    //card__side que es el que representa la cara de la figura
    -moz-perspective: 150rem;
    -webkit-perspective: 150rem;
    perspective: 150rem;
    position: relative;
    height: 52rem;

    &__side {
        //Mismo tamaño la cara que el padre
        height: 100%;
        width: 100%;
        transition: all .8s ease;
        position: absolute;
        top: 0;
        left: 0;
        //Que la parte trasera del elemento sea invisible, nos sirve para cuando rotamos
        -webkit-backface-visibility: hidden;
        -moz-backface-visibility: hidden;
        backface-visibility: hidden;
        border-radius: .3rem;
        //Para que la imagen que ponemos dentro no pueda sobrepasar los bordes, al hacerlos redondos
        //Si tuviéramos un borde muy grande, no se vería
        //overflow: hidden;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

        &--front {
            background-color: $color-white;
        }

        &--back {
            //Al principio, la parte 'trasera' de la figura ya está rotada,
            //para que al rotar al hacer hover haga bien el efecto
            transform: rotateY(180deg);

            &-1 {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
            }

            &-2 {
                background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
            }

            &-3 {
                background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
            }
        }

    }

    //Cuando hacemos hover sobre el card, queremos estilizar el card__side-front
    &:hover &__side--front {
        //Rotamos el card__side--front -180 grados al hacer hover sobre el card
        transform: rotateY(-180deg);
    }

    &:hover &__side--back {
        //Rotamos el card__side--back 0 grados al hacer hover sobre el card
        transform: rotateY(0);
    }

    &__picture {
        background-size: cover;
        height: 23rem;
        //Le dice que tiene que mezclar los distintos fondos (tenemos un gradient y una imagen)
        background-blend-mode: screen;
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
        //Tenemos que definir el mismo borde que el 'card', puesto que al hacer el clip-path
        //se rompe el 'overflow', que lo utilizábamos para que este elemento no sobrepasara
        //al card en el border-radius
        border-top-right-radius: .3rem;
        border-top-left-radius: .3rem;

        &--1 {
            background-image: 
                linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
                url(../img/nat-5.jpg);
        }

        &--2 {
            background-image: 
                linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
                url(../img/nat-6.jpg);
        }

        &--3 {
            background-image: 
                linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),
                url(../img/nat-7.jpg);
        }
    
    }

    &__heading {
        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;
        position: absolute;
        top: 12rem;
        right: 2rem;
        width: 75%;

    }

    &__heading-span {
        padding: 1rem 1.5rem;
        //Aplica el estilo a todas las cajas que crea el elemento, en este caso como el texto
        //se divide en 2 líneas, aplica el padding por igual (derecha, izquierda, arriba, abajo)
        //en las dos cajas
        -webkit-box-decoration-break: clone;
        box-decoration-break: clone;

        &--1 {
            background-image: 
                linear-gradient(to right bottom, 
                rgba($color-secondary-light, .85), 
                rgba($color-secondary-dark, .85));
        }

        &--2 {
            background-image: 
                linear-gradient(to right bottom, 
                rgba($color-primary-light, .85), 
                rgba($color-primary-dark, .85));
        }

        &--3 {
            background-image: 
                linear-gradient(to right bottom, 
                rgba($color-tertiary-light, .85), 
                rgba($color-tertiary-dark, .85));
        }
    }

    &__details {
        padding: 3rem;

        ul {
            list-style: none;
            width: 80%;
            //Centramos un 'block' element dentro de un 'block' element, nos sirve margin: 0 auto
            margin: 0 auto;

            li {
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;

                &:not(:last-child) {
                    border-bottom: 1px solid $color-gray-light-2;
                }
            }
        }
    }

    &__cta {
        position: absolute;
        //Para centrar el elemento con absolute positioning
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90%;
        text-align: center;
    }

    &__price-box {
        text-align: center;
        color: $color-white;
        margin-bottom: 8rem;
    }

    &__price-only {
        font-size: 1.4rem;
        text-transform: uppercase;
    }

    &__price-value {
        font-size: 6rem;
        font-weight: 100;
    }

}